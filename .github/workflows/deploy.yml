name: CD Workflow

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  deploy:
    # Only run if the PR was merged (not just closed without merging)
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the latest code from the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Connect to remote server via SSH and run deployment commands
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            # Update package lists and install curl (if not already installed)
            echo "🔧 Updating system and installing curl..."
            sudo apt-get update -y && sudo apt-get install -y curl

            # Install 'n' to manage Node.js versions globally
            echo "📦 Installing n (Node version manager)..."
            sudo npm install -g n

            # Install Node.js version 18 (matching CI workflow)
            echo "⬆️ Installing Node.js 18..."
            sudo n 18

            # Verify the installed Node.js version
            echo "✅ Verifying Node.js version..."
            node -v
            npm -v

            # Install PM2 globally to manage Node processes
            echo "🔨 Installing PM2 globally..."
            sudo npm install -g pm2

            # Navigate to your project directory – update the path accordingly
            echo "🚀 Navigating to project directory..."
            cd ~/DreamTrip-AI

            # Checkout the main branch and pull the latest changes
            echo "📂 Checking out main branch and pulling latest changes..."
            git checkout main
            git pull

            # Install root dependencies
            echo "📦 Installing root dependencies..."
            npm install

            # Install backend dependencies and start backend with PM2
            echo "📦 Installing backend dependencies..."
            cd backend
            npm install

            # Remove any existing backend process to avoid 'Script already launched' error
            echo "🧹 Deleting any existing backend PM2 process..."
            pm2 delete backend || true

            echo "🟢 Starting backend with PM2..."
            pm2 start index.js --name backend

            # Install client dependencies, build and start client with PM2
            echo "📦 Installing client dependencies..."
            cd ../client
            npm install
            npm run build

            # Remove any existing frontend process before starting a new one
            echo "🧹 Deleting any existing client PM2 process..."
            pm2 delete client || true

            echo "🟢 Serving client build with PM2..."
            pm2 start "serve -s dist -l 5173" --name client

            # Save PM2 configuration so processes restart on server reboot
            echo "💾 Saving PM2 configuration..."
            pm2 save

            echo "✅ Deployment complete!"
