/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 scene.gltf --transform 
Files: scene.gltf [126.45KB] > C:\Users\USER\Desktop\My\landing\public\models2\butterfly2\scene-transformed.glb [90.16KB] (29%)
Author: Artistic_side (https://sketchfab.com/leorehman333)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/animated-butterfly-d4fbcbaab845402999f30c5aa75851e6
Title: Animated Butterfly
*/

import React, { useEffect } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Butterfly2(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/models2/butterfly2/scene-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  console.log("Nodes 2:", nodes);
  console.log("Materials 2:", materials);
  console.log("Animations 2:", animations);
  console.log("actions 2:", actions);
     useEffect(() => {
        if (actions?.Flying) {
          actions.Flying.timeScale = 0.15;
          actions.Flying.play();
        } else {
          console.warn("Animation 'Flying' doesnt exist");
        }
      }, [actions]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <primitive object={nodes.GLTF_created_0_rootJoint} />
        <skinnedMesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials.Wings} skeleton={nodes.Object_7.skeleton} />
        <skinnedMesh name="Object_9" geometry={nodes.Object_9.geometry} material={materials.Wings} skeleton={nodes.Object_9.skeleton} />
        <skinnedMesh name="Object_11" geometry={nodes.Object_11.geometry} material={materials['Material.001']} skeleton={nodes.Object_11.skeleton} />
      </group>
    </group>
  )
}

useGLTF.preload('/models2/butterfly2/scene-transformed.glb')
